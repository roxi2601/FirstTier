@page "/Profile/{id}"
@using FirstTier.Models
@using System.Drawing
@using System.Drawing.Imaging
@using System.IO
@using FirstTier.Authentication
@using FirstTier.Data
@inject AccountService AccountService
@inject ArtworkService ArtworkService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

 
<div class="container col-md-8 main-section" style="margin-top: 40px">
    <div class="row">
            
        <div class="row user-left-part" style="background-color: white">
            <div class="col-md-3 col-sm-3 col-xs-3 user-profile-part pull-left">
                <div class="row ">
                    <div class="col-md-12 col-md-12-sm-12 col-xs-12 user-image text-center">
                        <img src="@PrepareSRCProfile(account)" style="border-radius: 50%; width: 150px; height: 150px; margin-top: 20px" alt="picture" class="img-thumbnail">
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 user-detail-section1 text-center">
                        <div class="aboutme "><i class="fa fa-user-o" aria-hidden="true"></i> </div>
                    </div>
                    <div class="row user-detail-row" style="margin-top: 80px">
                        <div class="col-md-12 col-sm-12 user-detail-section2 pull-left">
                            <div class="border"></div>
                            <p>About me</p>
                            <span>@account.Description</span>
                            
                        </div>
                    </div>
                        
                </div>
            </div>
            <div class="col-md-9 profile-right-section">
                <div class="row profile-right-section-row">
                    <div class="col-md-12 profile-header">
                        <div class="row">
                            <div class="col-md-8 col-sm-6 col-xs-6 profile-header-section1 pull-left">
                                <h1>@account.FirstName @account.LastName</h1>
                                <p>@account.username</p>
                            </div>
                            <div class="col-md-12 col-sm-6 col-xs-6 profile-header-section1 text-right pull-right">
                             
                                <AuthorizeView Policy="LoggedUser">
                                                            @if (!isOwner)
                                                            {
                                <button  class="btn btn-info req-btn" type="submit" @onclick="Chat" > Chat with me!</button> 
                                                            }
                                                        </AuthorizeView>
                                                         
                                 @if (!isOwner)
                                                        {
                                                            <AuthorizeView Policy="LoggedButNotAdmin">
                                                                <button class="btn btn-info req-btn" type="submit"> Report me!</button> 
                                                            </AuthorizeView>
                                                        }
                                
                                
                            </div>
                        </div>
                            
                    </div>
                           
                    <div class="col-md-12">
                                
                             
                        @*<AuthorizeView Policy="admin" >*@
                            <div class="row">
                                <div class="col-md-12  profile-tag-section text-center">
                                    <div class="row">
                                        @if (isOwner) {
                                        <div class="col-md-3 col-sm-3 profile-tag">


                                            <a @onclick="profileClick"><i class="fa fa-calendar-check-o" aria-hidden="true"></i>
                                                <p>edit profile</p></a>

                                        </div>
                                        }
                                        <div class="col-md-3 col-sm-3 profile-tag">
                                            <AuthorizeView Policy="admin">
                                                <p @onclick="DeleteProfile"><i class="fa fa-address-book" aria-hidden="true"></i>
                                                    <p>delete profile</p>
                                                </p>
                                            </AuthorizeView>
                                            @if (isOwner)
                                            {
                                                <p @onclick="DeleteProfile"><i class="fa fa-address-book" aria-hidden="true"></i>
                                                    <p>delete profile</p>
                                                </p>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 img-main-rightPart">
                                    <div class="row">

                                        <div class="col-md-12 image-right">

                                        </div>

                                    </div>
                                </div>

                            </div>
                       
                           

                    </div>
                    <div class="row">
                        <table class="table">
                            <thread>
                                <tr>
                                    <th>My artworks</th>
                                </tr>
                                @if (artworksToShow == null)
                                {
                                    <p>
                                        <em> Loading.. </em>
                                    </p>
                                }
                                else if (!artworksToShow.Any())
                                {
                                    <p>
                                        <em>No offers exist, Please add some.</em>
                                    </p>
                                }
                                else
                                {
                                    <div class="col-12 row">
                                        @foreach (var artwork in artworksToShow)
                                        {
                                            <div class="col-12">
                                                <div id="artworkElement">
                                                    <div id="categoryElement"><label style="color: white">@artwork.category</label></div>
                                                    <img src="@PrepareSRC(artwork)" alt="picture" class="img-thumbnail" @onclick="() => ImageClick(artwork.id)">
                                                    <label id="artworkTitleElement">@artwork.title</label>
                                                    <div id="artworkPriceElement">
                                                        <label>@artwork.price €</label>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </thread>
                            <tbody>
                                   
                            </tbody>
                        </table>
                    </div>
                           
                </div>
            </div>
        </div>
    </div>
</div>
@*<Confirm ConfirmationChanged = "ConfirmDelete" @ref=@DeleteConfirmation></Confirm>*@
@code {

    [Parameter]
    public string Id { get; set; }
    private Account account = new Account();
    string errorMessage = "";
    private IList<Account> allAccounts;
    private IList<Artwork> artworks;
    private IList<Artwork> artworksToShow;
    int userId;
    bool isOwner;
    
    private string imagePathArtwork = "images/paleta.jpg";

    /*protected ConfirmBase DeleteConfirmation { get; set; }*/
    byte[] img;
    string imagePath = "images/painter-161318_640.png";

    private void Chat()
    {
        NavigationManager.NavigateTo("/Chat");
    }
    
    private void ImageClick(int id)
    {
        NavigationManager.NavigateTo("/ArtworkPage/"+id);
    }

    private async Task profileClick()
    {
        User user = ((UserCustomAuthenticationStateProvider) AuthenticationStateProvider).GetCurrentUser();
        if (user != null)
        {
            NavigationManager.NavigateTo("/EditProfile/"+user.ID);
        }
        
    }

    private void DeleteProfile()
    {
        try
        {
            AccountService.RemoveAccountAsync(account.ID);
            ((UserCustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }


    private string PrepareSRC(Artwork artwork)
    {
        if (artwork.pictureBytes != null)
        {
            return "images/artwork" + artwork.id + ".jpg";
        }
        return "images/paleta.jpg";
    }
    private string PrepareSRCProfile(Account account)
    {
        if (account.Img != null)
        {
            return "images/profile" + account.ID + ".jpg";
        }
        return "images/defaultprofilepic.jpg";
    }

    protected override async Task OnInitializedAsync()
    {
        int id = Int32.Parse(Id); 
        account = await AccountService.GetAccountAsync(id);
        Console.WriteLine(account.ID);
        artworks = await ArtworkService.GetArtworksAsync();
        
        artworksToShow = artworks.Where(artwork => artwork.userId==id).ToList();
        User user  = ((UserCustomAuthenticationStateProvider) AuthenticationStateProvider).GetCurrentUser();
        if (user != null)
        {
            isOwner = user.ID == account.ID;
        }

       
        /*if (account.Img != null)
        {
            imagePath= "images/profile" + account.ID + ".jpg";
        }
        imagePath  =  "images/defaultprofilepic.jpg";*/
        if (account.Img != null)
        {
            var ms = new MemoryStream();
            ms.Write(account.Img);
            Image.FromStream(ms).Save("wwwroot/images/profile"+account.ID+".jpg",ImageFormat.Jpeg);
        }
    }

}
